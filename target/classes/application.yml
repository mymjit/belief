spring:

  profiles:
     active: dev #发布时修改成发布的配置文件 prod

  datasource:
     type: com.alibaba.druid.pool.DruidDataSource #阿里巴巴的数据库连接池
     driver-class-name: com.mysql.jdbc.Driver
     url: jdbc:mysql://127.0.0.1:3306/belief?useUnicode=true&characterEncoding=utf-8&useSSL=false
     username: root
     password: tiger
     # 下面为连接池的补充设置，应用到上面所有数据源中
     usessl: false
     # 初始化大小，最小，最大
     initialSize: 5
     minIdle: 5
     maxActive: 20
     # 配置获取连接等待超时的时间
     maxWait: 60000
     # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
     timeBetweenEvictionRunsMillis: 60000
     # 配置一个连接在池中最小生存的时间，单位是毫秒
     minEvictableIdleTimeMillis: 300000
     # Oracle请使用select 1 from dual
     validationQuery: SELECT 'x'
     testWhileIdle: true
     testOnBorrow: false
     testOnReturn: false
     # 打开PSCache，并且指定每个连接上PSCache的大小
     poolPreparedStatements: true
     maxPoolPreparedStatementPerConnectionSize: 20
     # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
     filters: stat,wall,slf4j

     # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
     # spring.datasource.connectionProperties: druid.stat.mergeSql: true;
     #druid.stat.slowSqlMillis: 5000
     # 合并多个DruidDataSource的监控数据
     #spring.datasource.useGlobalDataSourceStat: true
  redis:
     host: 192.168.1.11
     port: 6379
     # REDIS (RedisProperties)
     # Redis数据库索引（默认为0）
     database: 0
     # Redis服务器连接密码（默认为空）
     password:
     # 连接池最大连接数（使用负值表示没有限制）
     # 连接超时时间（毫秒）
     timeout: 0
     pool:
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0





